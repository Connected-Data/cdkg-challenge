1
00:00:04,400 --> 00:00:06,400
Hello. My name is
Nicolaj Van Omme,

2
00:00:06,400 --> 00:00:08,340
and I'm the CEO of Funartech,

3
00:00:08,880 --> 00:00:11,540
a startup in Montreal doing AI

4
00:00:11,680 --> 00:00:12,900
a little bit differently.

5
00:00:13,745 --> 00:00:15,505
And today, I'm
gonna talk about

6
00:00:15,505 --> 00:00:17,445
this way of doing AI.

7
00:00:17,665 --> 00:00:19,365
So I'm gonna talk about
the hybridization

8
00:00:19,665 --> 00:00:22,165
of ML machine learning and OR

9
00:00:22,305 --> 00:00:23,170
operations research,

10
00:00:23,490 --> 00:00:24,930
and I'll try to convince you

11
00:00:24,930 --> 00:00:26,550
that this is this
combination,

12
00:00:27,250 --> 00:00:28,790
the future of AI.

13
00:00:29,170 --> 00:00:30,950
I would like to
thank the connected

14
00:00:31,170 --> 00:00:32,290
data world team.

15
00:00:32,290 --> 00:00:33,875
Thank you very much
for hosting me.

16
00:00:33,875 --> 00:00:35,875
It's always a pleasure
and an honor

17
00:00:35,875 --> 00:00:37,315
to be able to present the work

18
00:00:37,315 --> 00:00:38,775
we are working on.

19
00:00:40,115 --> 00:00:42,580
So I'm gonna use
two terminology,

20
00:00:43,200 --> 00:00:45,040
two abbreviations today, o r,

21
00:00:45,040 --> 00:00:47,760
operations research, and m l,

22
00:00:47,760 --> 00:00:48,480
machine learning.

23
00:00:48,480 --> 00:00:49,680
Everybody knows what machine

24
00:00:49,680 --> 00:00:51,915
learning is.
Operations research,

25
00:00:52,135 --> 00:00:53,895
I'm gonna talk about
it, what it is,

26
00:00:53,895 --> 00:00:54,615
what you can do,

27
00:00:54,615 --> 00:00:56,795
and why you should
mix it with ML.

28
00:00:57,015 --> 00:00:59,095
But let's say that
it's the science

29
00:00:59,095 --> 00:00:59,835
of optimization.

30
00:01:01,000 --> 00:01:03,160
So when we are talking about

31
00:01:03,160 --> 00:01:05,180
analytical approaches to solve

32
00:01:05,720 --> 00:01:07,260
complex industrial problems,

33
00:01:07,785 --> 00:01:09,625
Most of the people
have this in mind.

34
00:01:09,625 --> 00:01:11,325
You have the data science here

35
00:01:11,545 --> 00:01:13,305
combined with big
data and then

36
00:01:13,305 --> 00:01:14,925
artificial in intelligence.

37
00:01:15,065 --> 00:01:16,190
And within
artificial especially

38
00:01:16,190 --> 00:01:16,774
here in Montreal.

39
00:01:16,774 --> 00:01:17,286
But there is at least
one actor missing,

40
00:01:17,286 --> 00:01:18,970
and this is, of course,

41
00:01:24,585 --> 00:01:27,785
But there is at least
one actor missing,

42
00:01:27,785 --> 00:01:29,065
and this is, of course,

43
00:01:29,065 --> 00:01:30,445
operations research.

44
00:01:30,585 --> 00:01:32,105
Actually, although all those

45
00:01:32,105 --> 00:01:34,770
fields are based in a way or

46
00:01:34,770 --> 00:01:37,110
another on operations
research.

47
00:01:37,730 --> 00:01:39,670
So what is operation
research?

48
00:01:40,245 --> 00:01:42,745
I said it's the science
of optimization.

49
00:01:43,365 --> 00:01:45,145
It's one of the science
of optimization.

50
00:01:45,205 --> 00:01:46,965
It's a very important science

51
00:01:46,965 --> 00:01:47,705
of optimization.

52
00:01:48,390 --> 00:01:50,950
So let's look at
a real problem.

53
00:01:50,950 --> 00:01:52,790
You have a left column here

54
00:01:52,790 --> 00:01:54,550
where we are talking
about reality,

55
00:01:54,550 --> 00:01:55,655
and you have the right column

56
00:01:55,655 --> 00:01:57,255
here where we are
talking about

57
00:01:57,255 --> 00:01:58,475
the mathematical world.

58
00:01:58,775 --> 00:02:01,095
The idea is that
you are taking

59
00:02:01,095 --> 00:02:01,995
a real problem,

60
00:02:02,055 --> 00:02:03,735
and you are transforming it.

61
00:02:03,735 --> 00:02:05,980
You are modeling it
into the mathematical

62
00:02:06,040 --> 00:02:08,040
world. Let's say
you have a city,

63
00:02:08,040 --> 00:02:09,900
Konigsberg, Kaliningrad now,

64
00:02:09,960 --> 00:02:11,560
where you have
seven bridges and

65
00:02:11,560 --> 00:02:13,420
you ask yourself
the following question.

66
00:02:13,645 --> 00:02:15,485
Is it possible to
start a tour,

67
00:02:15,485 --> 00:02:16,385
let's say here,

68
00:02:16,445 --> 00:02:18,625
and cross each
bridge only once

69
00:02:19,885 --> 00:02:22,285
and coming back to
the starting point?

70
00:02:22,285 --> 00:02:23,185
Is this possible?

71
00:02:23,920 --> 00:02:25,680
The great Euler answered that

72
00:02:25,680 --> 00:02:27,600
question by the negative.
No. It is not.

73
00:02:27,600 --> 00:02:29,460
And he did this by inventing

74
00:02:29,520 --> 00:02:31,140
basically graph theory.

75
00:02:31,245 --> 00:02:32,925
So he modeled
that problem with

76
00:02:32,925 --> 00:02:34,845
a graph where the bridges are

77
00:02:34,845 --> 00:02:36,685
represented by the edges and

78
00:02:36,685 --> 00:02:38,045
the pieces of land that are

79
00:02:38,045 --> 00:02:40,225
connected by the bridges
by the nodes.

80
00:02:40,470 --> 00:02:42,070
So the question now becomes,

81
00:02:42,070 --> 00:02:44,150
is it possible to
start from one node,

82
00:02:44,150 --> 00:02:45,210
let's say this one,

83
00:02:45,270 --> 00:02:47,510
and travel the graph
going only

84
00:02:47,510 --> 00:02:49,635
once through each edge and to

85
00:02:49,635 --> 00:02:51,395
a whole tour
passing through all

86
00:02:51,395 --> 00:02:53,235
edges and coming back.
Is this possible?

87
00:02:53,235 --> 00:02:54,435
No. For instance,

88
00:02:54,435 --> 00:02:57,095
if you look at
this note, well,

89
00:02:57,380 --> 00:03:00,280
it's it has three, edges,

90
00:03:00,340 --> 00:03:01,940
which means that if I go once

91
00:03:01,940 --> 00:03:03,700
in the note, I can
go out of the note.

92
00:03:03,700 --> 00:03:04,835
But if I come back,

93
00:03:04,915 --> 00:03:06,835
I cannot go out
without crossing

94
00:03:06,835 --> 00:03:07,975
again another bridge.

95
00:03:08,275 --> 00:03:09,815
So now the question becomes,

96
00:03:10,275 --> 00:03:13,160
I have to go at least once or

97
00:03:13,160 --> 00:03:15,800
twice over a bridge, an edge.

98
00:03:15,800 --> 00:03:17,240
What is the minimal amount of

99
00:03:17,240 --> 00:03:19,660
edges I have to cross
twice or more,

100
00:03:20,200 --> 00:03:22,385
to do a whole tour and to pass

101
00:03:22,385 --> 00:03:24,245
on every edge at least once.

102
00:03:24,625 --> 00:03:26,865
That was solved by a Chinese

103
00:03:26,865 --> 00:03:29,745
mathematician, Kwan Maiko in

104
00:03:29,745 --> 00:03:30,470
the sixties.

105
00:03:30,950 --> 00:03:32,650
And, basically,

106
00:03:33,190 --> 00:03:34,870
he found a way to solve this,

107
00:03:34,870 --> 00:03:36,710
and the solution
here is to add

108
00:03:36,710 --> 00:03:37,590
those two edges.

109
00:03:37,590 --> 00:03:39,050
If you add those two edges,

110
00:03:39,585 --> 00:03:41,345
you are able to
do a whole tour

111
00:03:41,345 --> 00:03:43,605
passing at least
once on every edge.

112
00:03:44,545 --> 00:03:47,460
Normally, the way you go from

113
00:03:47,460 --> 00:03:49,160
reality to the mathematical

114
00:03:49,300 --> 00:03:51,140
world is really difficult and

115
00:03:51,140 --> 00:03:52,740
vice versa. The
translation from

116
00:03:52,740 --> 00:03:54,060
a mathematical
solution to take

117
00:03:54,060 --> 00:03:55,540
a decision in
the real world is

118
00:03:55,540 --> 00:03:56,345
also difficult.

119
00:03:56,665 --> 00:03:58,425
In this case, it's not really

120
00:03:58,425 --> 00:03:59,865
that difficult
because you just

121
00:03:59,865 --> 00:04:01,625
take the tour and you applied

122
00:04:01,625 --> 00:04:04,025
it in reality. So
that's basically

123
00:04:04,025 --> 00:04:04,905
operations research.

124
00:04:04,905 --> 00:04:07,320
You take a problem in reality

125
00:04:07,620 --> 00:04:08,980
and you translate this into

126
00:04:08,980 --> 00:04:09,940
the mathematical world.

127
00:04:09,940 --> 00:04:11,380
You solve it, and then you can

128
00:04:11,380 --> 00:04:13,060
take some decision
with the solution

129
00:04:13,060 --> 00:04:14,040
you get mathematically.

130
00:04:15,105 --> 00:04:18,405
So OR exists since
the second World War.

131
00:04:18,945 --> 00:04:20,865
And most of the time,

132
00:04:20,865 --> 00:04:22,705
we see an improvement
of twenty,

133
00:04:22,705 --> 00:04:23,525
thirty percent.

134
00:04:24,170 --> 00:04:25,450
That's compared to solutions

135
00:04:25,450 --> 00:04:27,050
that are not using OR,

136
00:04:27,050 --> 00:04:28,510
so it's extremely efficient.

137
00:04:30,170 --> 00:04:31,770
Sometimes you don't get those

138
00:04:31,770 --> 00:04:33,630
improvements, but
it's still worth it.

139
00:04:33,995 --> 00:04:35,455
It's already used extensively

140
00:04:35,835 --> 00:04:37,675
in a lot of sector,
of course,

141
00:04:37,675 --> 00:04:39,135
like transportation,
Internet,

142
00:04:39,515 --> 00:04:40,795
the army, the supply chain.

143
00:04:40,795 --> 00:04:43,295
There is no supply
chain without OR.

144
00:04:43,610 --> 00:04:45,370
And, again, it's
the science of

145
00:04:45,370 --> 00:04:46,350
of optimization.

146
00:04:47,370 --> 00:04:48,990
If you think about minimizing

147
00:04:49,130 --> 00:04:50,590
or maximizing something,

148
00:04:50,895 --> 00:04:51,935
you should think that probably

149
00:04:51,935 --> 00:04:53,695
there is a kind of solution in

150
00:04:53,695 --> 00:04:54,835
OR to do that.

151
00:04:55,855 --> 00:04:58,115
So to give you an idea
of the efficiency

152
00:04:58,335 --> 00:05:01,060
of OR compared to
ML because you

153
00:05:01,060 --> 00:05:03,160
can also optimize with
machine learning,

154
00:05:03,460 --> 00:05:04,520
let's take the TSP,

155
00:05:04,580 --> 00:05:06,520
the traveling
salesman problem.

156
00:05:06,875 --> 00:05:08,235
So that's the problem
where you

157
00:05:08,235 --> 00:05:10,415
have cities, the red dots here

158
00:05:10,555 --> 00:05:11,695
in the right column,

159
00:05:12,315 --> 00:05:14,255
and you want to
do a whole tour

160
00:05:14,315 --> 00:05:15,800
visiting each city once.

161
00:05:15,800 --> 00:05:17,100
So you enter a city,

162
00:05:17,240 --> 00:05:18,680
and then you go
out of the city.

163
00:05:18,680 --> 00:05:19,640
You visit the next one,

164
00:05:19,640 --> 00:05:20,840
and you do a whole tour,

165
00:05:20,840 --> 00:05:22,700
and you want this
tour to be minimal.

166
00:05:23,325 --> 00:05:24,925
This is what we called an NP

167
00:05:24,925 --> 00:05:27,005
hard problem. It
means that it's

168
00:05:27,005 --> 00:05:28,385
really difficult to solve.

169
00:05:29,085 --> 00:05:31,665
If you try to solve
it with ML approach,

170
00:05:32,660 --> 00:05:33,880
the best approaches,

171
00:05:33,940 --> 00:05:36,040
the best algorithms until now

172
00:05:36,580 --> 00:05:38,040
are able to solve this problem

173
00:05:38,180 --> 00:05:40,440
exactly with one
hundred cities,

174
00:05:40,795 --> 00:05:41,695
which is great.

175
00:05:41,995 --> 00:05:44,335
But if you look at
solution in OR,

176
00:05:44,795 --> 00:05:46,475
they're able to solve the same

177
00:05:46,475 --> 00:05:48,575
problem with one
hundred thousand

178
00:05:48,875 --> 00:05:50,880
cities. So there
is a difference.

179
00:05:50,880 --> 00:05:52,800
And because it's
a NP hard problem,

180
00:05:52,800 --> 00:05:54,560
it means that if
you have a solution

181
00:05:54,560 --> 00:05:56,660
for one hundred
nodes, cities,

182
00:05:56,855 --> 00:05:58,295
and you want to solve the same

183
00:05:58,295 --> 00:06:00,475
problem with one
hundred twenty cities,

184
00:06:01,255 --> 00:06:02,855
it's not like you can put some

185
00:06:02,855 --> 00:06:03,980
more computing power.

186
00:06:04,220 --> 00:06:06,140
You probably need
another algorithm.

187
00:06:06,140 --> 00:06:07,420
So you really see
the difference

188
00:06:07,420 --> 00:06:08,880
between both approaches.

189
00:06:09,180 --> 00:06:11,580
OR is extremely efficient for

190
00:06:11,580 --> 00:06:12,240
the optimization.

191
00:06:14,585 --> 00:06:16,665
So why is it also important?

192
00:06:16,665 --> 00:06:18,185
It's not only for
the efficiency,

193
00:06:18,185 --> 00:06:20,205
but also because with OR,

194
00:06:20,425 --> 00:06:22,525
you can do prescriptive
analysis.

195
00:06:23,280 --> 00:06:24,400
So in front of you,

196
00:06:24,400 --> 00:06:27,440
you have what
Gartner is telling

197
00:06:27,440 --> 00:06:30,340
you by telling you
that the analytical

198
00:06:30,480 --> 00:06:32,080
approaches can be divided in

199
00:06:32,080 --> 00:06:33,835
four types of analysis.

200
00:06:34,535 --> 00:06:35,275
And, basically,

201
00:06:35,335 --> 00:06:38,075
each analysis is
answering one question.

202
00:06:39,095 --> 00:06:41,730
You should see this
as a continuum

203
00:06:41,870 --> 00:06:43,710
of questions. So
if you ask one

204
00:06:43,710 --> 00:06:45,790
of the question, you
get some answers.

205
00:06:45,790 --> 00:06:48,625
You use those
answers to answer

206
00:06:48,625 --> 00:06:49,585
the other questions.

207
00:06:49,585 --> 00:06:51,265
And this is why
there is a wheel

208
00:06:51,265 --> 00:06:52,865
in the middle
because it's really

209
00:06:52,865 --> 00:06:54,785
a system that is
dynamic and it

210
00:06:54,785 --> 00:06:57,140
is continuous.
So the first type

211
00:06:57,140 --> 00:06:59,620
of analysis is
the descriptive one,

212
00:06:59,620 --> 00:07:01,000
and it's basically answering

213
00:07:01,300 --> 00:07:03,240
the question what
has happened.

214
00:07:03,300 --> 00:07:05,160
So, basically, you
do an assessment

215
00:07:05,415 --> 00:07:06,795
of what is happening.

216
00:07:07,255 --> 00:07:09,675
Then there is
the diagnostic analysis,

217
00:07:10,055 --> 00:07:11,755
which is a little bit
more interesting,

218
00:07:11,815 --> 00:07:14,010
and you are answering
the question

219
00:07:14,010 --> 00:07:15,230
why did it happen.

220
00:07:15,770 --> 00:07:18,190
And, also importantly,
do you like it?

221
00:07:18,330 --> 00:07:20,145
Do you like what
you see? Yes?

222
00:07:20,145 --> 00:07:22,065
Why? No? Why? What can you do

223
00:07:22,065 --> 00:07:23,585
about this? And then there is

224
00:07:23,585 --> 00:07:25,505
the third one that
we are talking

225
00:07:25,505 --> 00:07:26,545
so much these days,

226
00:07:26,545 --> 00:07:28,165
the predictive analysis,

227
00:07:28,430 --> 00:07:30,270
which answers
the question what

228
00:07:30,270 --> 00:07:31,410
will likely happen.

229
00:07:31,550 --> 00:07:32,910
So, basically,
you're constricting

230
00:07:32,910 --> 00:07:34,450
a system. You give an input,

231
00:07:34,590 --> 00:07:36,110
and your system is giving you

232
00:07:36,110 --> 00:07:37,405
a likely output.

233
00:07:37,565 --> 00:07:39,245
It's giving you an output most

234
00:07:39,245 --> 00:07:40,865
of the time with
a certain probability.

235
00:07:41,725 --> 00:07:42,685
This is really nice,

236
00:07:42,685 --> 00:07:44,205
and this is where ML machine

237
00:07:44,205 --> 00:07:45,025
learning tracks.

238
00:07:45,405 --> 00:07:47,330
But there is another analysis

239
00:07:47,390 --> 00:07:48,770
which is called
the prescriptive

240
00:07:49,230 --> 00:07:51,490
analysis, which
answer the question,

241
00:07:51,630 --> 00:07:53,490
what is the optimal action?

242
00:07:54,955 --> 00:07:56,475
It's more than just asking for

243
00:07:56,475 --> 00:07:57,675
the optimal action.

244
00:07:57,675 --> 00:07:59,515
Actually, I see
this as a change

245
00:07:59,515 --> 00:08:01,615
of paradigm in the sense that

246
00:08:02,320 --> 00:08:03,920
instead of
constructing a system

247
00:08:03,920 --> 00:08:05,680
where you give it an input and

248
00:08:05,680 --> 00:08:07,220
it returns you an output,

249
00:08:07,600 --> 00:08:09,935
you are giving it an output,

250
00:08:09,935 --> 00:08:11,475
and the system is basically

251
00:08:11,535 --> 00:08:12,915
constructing an input.

252
00:08:12,975 --> 00:08:15,395
That input that would give you

253
00:08:16,015 --> 00:08:17,635
the desired output.

254
00:08:18,120 --> 00:08:20,380
So it's really
a different way of,

255
00:08:21,320 --> 00:08:24,060
working, and it's
way more efficient.

256
00:08:24,815 --> 00:08:26,835
And to use that
prescriptive analysis,

257
00:08:27,055 --> 00:08:28,975
actually, you are
also using all

258
00:08:28,975 --> 00:08:30,195
the other analysis.

259
00:08:32,150 --> 00:08:35,350
So MLOR hybridization. Why?

260
00:08:35,350 --> 00:08:36,390
Well, first of all,

261
00:08:36,390 --> 00:08:37,910
you have those no free lunch

262
00:08:37,910 --> 00:08:39,430
theorems that basically tells

263
00:08:39,430 --> 00:08:41,370
you that there is no
universal approach.

264
00:08:41,855 --> 00:08:44,115
It seems that it
doesn't hold for ML.

265
00:08:44,495 --> 00:08:46,595
Okay? But it still
holds in mathematics.

266
00:08:46,895 --> 00:08:48,815
But the real
reason is that you

267
00:08:48,815 --> 00:08:50,495
have way better
results when you

268
00:08:50,495 --> 00:08:52,510
combine machine learning and

269
00:08:52,510 --> 00:08:53,890
operations research.

270
00:08:54,190 --> 00:08:55,490
First of all, you can optimize

271
00:08:55,710 --> 00:08:58,210
way better because
OR optimizes

272
00:08:58,510 --> 00:09:00,975
better than ML. But
it's not only that.

273
00:09:00,975 --> 00:09:03,315
You get also more
robust solutions.

274
00:09:03,855 --> 00:09:05,395
You get some kind
of explainability.

275
00:09:06,895 --> 00:09:08,700
Basically, when
you combine both,

276
00:09:08,780 --> 00:09:10,480
you combine
the domain knowledge

277
00:09:10,540 --> 00:09:13,020
because OR is able to
take the knowledge

278
00:09:13,020 --> 00:09:15,120
from a domain. You
can ask the engineers

279
00:09:15,180 --> 00:09:17,180
of the company
and ask them what

280
00:09:17,180 --> 00:09:19,365
they do, what
the field is about,

281
00:09:19,365 --> 00:09:21,865
and you can model
this into equations.

282
00:09:22,405 --> 00:09:24,025
So you get
the domain knowledge

283
00:09:24,165 --> 00:09:26,600
and then you get
the experience

284
00:09:26,600 --> 00:09:28,140
knowledge, the historical data

285
00:09:28,360 --> 00:09:30,780
with ML and you combine both,

286
00:09:32,600 --> 00:09:33,915
which means that if you have

287
00:09:33,915 --> 00:09:34,795
the domain knowledge,

288
00:09:34,795 --> 00:09:36,315
you already can
start the project

289
00:09:36,315 --> 00:09:37,595
without data. Yes.

290
00:09:37,595 --> 00:09:39,215
You can do
analytical approaches

291
00:09:39,355 --> 00:09:41,650
without data. You'll get data

292
00:09:41,650 --> 00:09:43,010
along the way,
but you can start

293
00:09:43,010 --> 00:09:44,290
right away because you already

294
00:09:44,290 --> 00:09:45,330
have some knowledge,

295
00:09:45,330 --> 00:09:46,630
which is the domain
knowledge.

296
00:09:47,090 --> 00:09:49,865
And, basically, when
you combine both,

297
00:09:49,865 --> 00:09:51,225
you can do things
that are simply

298
00:09:51,225 --> 00:09:54,765
impossible with OR
only or ML only.

299
00:09:54,905 --> 00:09:57,990
I'm gonna give you,
some examples later.

300
00:09:58,690 --> 00:10:01,910
So how can we
combine ML and OR?

301
00:10:02,210 --> 00:10:04,625
Let's say that basically,
at Virnatec,

302
00:10:04,925 --> 00:10:06,365
we found that there are four

303
00:10:06,365 --> 00:10:08,865
combinations at least
of both fields.

304
00:10:09,405 --> 00:10:11,165
The first one is now classical

305
00:10:11,165 --> 00:10:12,260
in the sense that it's it's

306
00:10:12,260 --> 00:10:13,000
becoming mainstream,

307
00:10:13,140 --> 00:10:15,560
but it wasn't
a few years ago.

308
00:10:15,620 --> 00:10:17,620
I would say it started around

309
00:10:17,620 --> 00:10:18,900
two thousand nineteen to be

310
00:10:18,900 --> 00:10:21,480
accepted as something
really normal.

311
00:10:21,985 --> 00:10:24,565
So it's the use of
both as black boxes.

312
00:10:24,785 --> 00:10:26,305
So you're combining both but

313
00:10:26,305 --> 00:10:28,245
without interaction
between the two.

314
00:10:28,625 --> 00:10:30,550
You use one and then
you use the other.

315
00:10:30,630 --> 00:10:31,430
And most of the time,

316
00:10:31,430 --> 00:10:32,950
you use first ML
machine learning

317
00:10:32,950 --> 00:10:34,490
and then you use
our operations

318
00:10:34,710 --> 00:10:37,030
research. The idea
is that with ML,

319
00:10:37,030 --> 00:10:38,090
you get some predictions.

320
00:10:38,150 --> 00:10:40,215
And then once you have those

321
00:10:40,215 --> 00:10:41,755
predictions, you can optimize

322
00:10:42,055 --> 00:10:43,275
with that insight.

323
00:10:44,135 --> 00:10:45,895
I'll give you
an example after,

324
00:10:45,895 --> 00:10:48,230
I mean, with the next slide.

325
00:10:48,530 --> 00:10:51,250
Then you can use
both fields to

326
00:10:51,250 --> 00:10:52,050
improve the other.

327
00:10:52,050 --> 00:10:53,090
This is quite technical,

328
00:10:53,090 --> 00:10:54,505
and it works really well.

329
00:10:54,585 --> 00:10:56,845
You can use OR to improve ML,

330
00:10:57,625 --> 00:10:58,585
in a kind of way.

331
00:10:58,585 --> 00:11:01,885
ML is the optimization
of predictions.

332
00:11:01,945 --> 00:11:04,470
So optimization OR is able to

333
00:11:04,470 --> 00:11:06,310
optimize and help ML.

334
00:11:06,310 --> 00:11:08,090
And it works the other
way around also.

335
00:11:08,390 --> 00:11:10,330
ML can improve OR.

336
00:11:11,575 --> 00:11:13,095
Those are two
technical ways to

337
00:11:13,095 --> 00:11:14,615
use them. There
are not so many

338
00:11:14,615 --> 00:11:16,535
teams doing that, and
most of the time,

339
00:11:16,535 --> 00:11:18,635
it's basically
academic research,

340
00:11:18,830 --> 00:11:20,050
but it's really,

341
00:11:20,910 --> 00:11:22,510
it it shows some results that

342
00:11:22,510 --> 00:11:23,330
are really nice.

343
00:11:23,390 --> 00:11:24,830
We are at the beginning
of that.

344
00:11:24,830 --> 00:11:26,850
And then there is
a fourth combination,

345
00:11:27,785 --> 00:11:29,645
and, that's really new.

346
00:11:29,945 --> 00:11:31,325
And it's
a complete hybridization

347
00:11:31,465 --> 00:11:33,785
of both ML and OR where you

348
00:11:33,785 --> 00:11:35,005
develop new algorithms.

349
00:11:35,400 --> 00:11:36,840
The idea is that you truly

350
00:11:36,840 --> 00:11:38,860
understand what ML
is fundamentally

351
00:11:39,240 --> 00:11:41,080
and what OR is
fundamentally and

352
00:11:41,080 --> 00:11:43,165
how you can combine
them together.

353
00:11:43,565 --> 00:11:45,025
And graph neural networks,

354
00:11:45,165 --> 00:11:47,345
I would say that this
is part of this.

355
00:11:48,365 --> 00:11:50,605
Graph neural networks
are really good,

356
00:11:50,605 --> 00:11:52,100
really nice. I mean,
we know this,

357
00:11:52,900 --> 00:11:54,420
in this conference,
but, actually,

358
00:11:54,420 --> 00:11:55,540
it's only the beginning.

359
00:11:55,540 --> 00:11:57,140
There are other
ways to combine

360
00:11:57,140 --> 00:12:00,200
them on a really
fundamental level.

361
00:12:01,425 --> 00:12:05,665
So my favorite
example to combine

362
00:12:05,665 --> 00:12:07,905
OR and ML the first way as two

363
00:12:07,905 --> 00:12:09,620
black boxes. Let's say you're

364
00:12:09,620 --> 00:12:11,160
a train company,
you have trucks,

365
00:12:11,620 --> 00:12:13,800
and you need to repair
and replace them.

366
00:12:13,860 --> 00:12:16,120
How can you do this
for a least cost?

367
00:12:16,455 --> 00:12:18,055
You can do this in two steps,

368
00:12:18,055 --> 00:12:19,175
two separate steps.

369
00:12:19,175 --> 00:12:20,075
The first step,

370
00:12:20,135 --> 00:12:21,575
you put some
cameras under your

371
00:12:21,575 --> 00:12:23,415
wagon and then
you you let your

372
00:12:23,415 --> 00:12:24,795
train flow, you
take pictures,

373
00:12:24,990 --> 00:12:25,950
and then you combine.

374
00:12:25,950 --> 00:12:27,490
You stitch
the pictures together

375
00:12:27,950 --> 00:12:29,230
probably with deep learning,

376
00:12:29,230 --> 00:12:30,050
machine learning.

377
00:12:30,350 --> 00:12:32,030
And you can also
study on those

378
00:12:32,030 --> 00:12:33,650
pictures what type
of reparations

379
00:12:34,065 --> 00:12:35,345
or replacement
you need to do.

380
00:12:35,345 --> 00:12:36,465
You're able to say, oh,

381
00:12:36,465 --> 00:12:37,825
that track needs
to be replaced

382
00:12:37,825 --> 00:12:39,905
in two years. This track needs

383
00:12:39,905 --> 00:12:40,545
to be repaired,

384
00:12:40,545 --> 00:12:42,950
and it's type of repairion a.

385
00:12:43,970 --> 00:12:45,490
But once you do this,

386
00:12:45,490 --> 00:12:47,350
you don't know how
to act because

387
00:12:47,410 --> 00:12:49,175
the idea is that maybe if you

388
00:12:49,175 --> 00:12:50,695
send the team to replace or

389
00:12:50,695 --> 00:12:51,495
repair a track,

390
00:12:51,495 --> 00:12:52,855
maybe the track that is just

391
00:12:52,855 --> 00:12:54,775
next to it shouldn't
be repaired

392
00:12:54,775 --> 00:12:56,395
or replaced right away,

393
00:12:56,455 --> 00:12:57,730
maybe six months later.

394
00:12:57,810 --> 00:12:59,490
But because the team
is already there,

395
00:12:59,490 --> 00:13:01,510
it would cost you
loss less sorry,

396
00:13:02,610 --> 00:13:04,390
to do the reparation
or the replacement

397
00:13:04,530 --> 00:13:05,905
right away because
they're already

398
00:13:05,905 --> 00:13:07,265
there instead of
sending another

399
00:13:07,265 --> 00:13:08,405
team six months later.

400
00:13:08,545 --> 00:13:09,445
This is optimization,

401
00:13:09,505 --> 00:13:11,265
and this is what you
can do with OR.

402
00:13:11,265 --> 00:13:12,225
So the second step,

403
00:13:12,225 --> 00:13:14,720
once you have a map
of your tracks,

404
00:13:16,060 --> 00:13:18,220
use OR to optimize
the way your

405
00:13:18,220 --> 00:13:20,480
teams can repair,
replace the tracks.

406
00:13:21,895 --> 00:13:23,835
I'm gonna give
you two examples

407
00:13:23,975 --> 00:13:26,055
of real industrial
projects that

408
00:13:26,055 --> 00:13:27,995
we did here at
Fanatec combining

409
00:13:28,135 --> 00:13:29,275
ML and OR.

410
00:13:29,750 --> 00:13:32,150
Basically, in the three,

411
00:13:32,150 --> 00:13:34,390
four types of
combinations that

412
00:13:34,390 --> 00:13:36,410
I showed you. Here,

413
00:13:36,470 --> 00:13:39,130
we are trying in real time to

414
00:13:39,535 --> 00:13:40,995
optimize bookings.

415
00:13:41,295 --> 00:13:42,975
So it's for a chain
restaurant,

416
00:13:42,975 --> 00:13:43,775
but not only that,

417
00:13:43,775 --> 00:13:45,455
it's also for
a company that was

418
00:13:45,455 --> 00:13:46,595
doing some events.

419
00:13:47,440 --> 00:13:49,200
And they ask us to be able to

420
00:13:49,200 --> 00:13:50,800
optimize the booking
in the sense

421
00:13:50,800 --> 00:13:53,120
that they want to
optimize the number

422
00:13:53,120 --> 00:13:54,640
of people that
could enter their

423
00:13:54,640 --> 00:13:56,845
restaurants. So
in front of you,

424
00:13:56,845 --> 00:13:59,085
you see effective
examples examples,

425
00:13:59,085 --> 00:14:01,745
sorry, of a restaurant with

426
00:14:01,885 --> 00:14:04,340
twelve tables. Each
row corresponds

427
00:14:04,480 --> 00:14:05,780
to one table,

428
00:14:06,080 --> 00:14:08,320
and each column
represents the fifteen

429
00:14:08,320 --> 00:14:09,620
minutes time slot.

430
00:14:09,920 --> 00:14:11,700
And let's say that
this is an evening.

431
00:14:12,285 --> 00:14:13,745
And in blue,

432
00:14:13,805 --> 00:14:16,445
the blue boxes are
actually bookings,

433
00:14:16,445 --> 00:14:18,365
reservation. So for instance,

434
00:14:18,365 --> 00:14:20,205
this one is a reservation for

435
00:14:20,205 --> 00:14:21,665
a group of seven people.

436
00:14:22,350 --> 00:14:23,630
So, basically, you have people

437
00:14:23,630 --> 00:14:25,070
calling you on the phone or

438
00:14:25,070 --> 00:14:27,170
going on your
website and saying,

439
00:14:27,310 --> 00:14:30,430
well, we are coming
a Tuesday at six.

440
00:14:30,670 --> 00:14:32,445
We have four. And because it's

441
00:14:32,445 --> 00:14:34,545
a Tuesday at six,
there are only four,

442
00:14:34,605 --> 00:14:36,765
you figure out with ML that

443
00:14:36,765 --> 00:14:37,725
probably they're
gonna stay for

444
00:14:37,725 --> 00:14:39,550
two hours. The thing is there

445
00:14:39,550 --> 00:14:40,910
is a lot of stochasticity in

446
00:14:40,910 --> 00:14:42,530
this problem in
the sense that,

447
00:14:42,590 --> 00:14:44,030
no, they are not
coming at six.

448
00:14:44,030 --> 00:14:45,950
They're coming at
six thirty. No.

449
00:14:45,950 --> 00:14:47,645
They are not four.
They're only three.

450
00:14:47,885 --> 00:14:49,325
And they don't stay
for two hours.

451
00:14:49,325 --> 00:14:50,705
They stay for four hours.

452
00:14:52,285 --> 00:14:53,665
So a lot of stochasticity,

453
00:14:53,885 --> 00:14:55,265
a really complex problem.

454
00:14:56,420 --> 00:14:59,480
We created a system
combining ML and OR,

455
00:15:00,020 --> 00:15:01,940
and this is a solution you get

456
00:15:01,940 --> 00:15:03,960
from that system
in real time.

457
00:15:04,425 --> 00:15:06,825
What I really like
is that the system

458
00:15:06,825 --> 00:15:08,985
learned by itself
that the best

459
00:15:08,985 --> 00:15:12,185
way to allow more
people to come

460
00:15:12,185 --> 00:15:13,705
into the restaurants
to optimize

461
00:15:13,705 --> 00:15:25,205
the booking not

462
00:15:25,205 --> 00:15:26,305
reserved, booking.

463
00:15:26,925 --> 00:15:29,565
And so those tables here are

464
00:15:29,565 --> 00:15:31,565
quite empty while
the others are

465
00:15:31,565 --> 00:15:32,545
are quite full.

466
00:15:32,920 --> 00:15:34,440
This was the best
way the system

467
00:15:34,440 --> 00:15:36,600
came up to optimize the number

468
00:15:36,600 --> 00:15:37,500
of people coming.

469
00:15:37,880 --> 00:15:38,940
But our customers,

470
00:15:39,640 --> 00:15:41,075
they didn't like this at all.

471
00:15:41,075 --> 00:15:42,595
Because if you
have a table like

472
00:15:42,595 --> 00:15:44,515
this one that is
empty for the whole

473
00:15:44,515 --> 00:15:46,275
evening, it means actually for

474
00:15:46,275 --> 00:15:47,795
the customers and
people working

475
00:15:47,795 --> 00:15:49,570
in the restaurant
that it's not

476
00:15:49,570 --> 00:15:50,290
a good restaurant.

477
00:15:50,290 --> 00:15:51,510
There aren't so many people

478
00:15:51,810 --> 00:15:53,250
because the table is empty.

479
00:15:53,250 --> 00:15:55,270
So our customer
didn't like this.

480
00:15:55,570 --> 00:15:57,745
And what I really like with OR

481
00:15:57,745 --> 00:16:00,305
is that actually you can add

482
00:16:00,305 --> 00:16:02,225
constraints. So we
added a constraint

483
00:16:02,225 --> 00:16:04,625
policy, the no long net zone

484
00:16:04,625 --> 00:16:06,450
table policy, which basically

485
00:16:06,450 --> 00:16:08,230
told the system you
cannot do this.

486
00:16:08,290 --> 00:16:10,550
You absolutely need
to fill the table.

487
00:16:11,090 --> 00:16:12,610
This is something
you can do with OR.

488
00:16:12,610 --> 00:16:13,730
It's really more difficult to

489
00:16:13,730 --> 00:16:14,790
do with ML.

490
00:16:14,930 --> 00:16:18,675
So solution combination
of ML and OR,

491
00:16:18,675 --> 00:16:20,455
we use ML to do
some estimations,

492
00:16:21,315 --> 00:16:23,015
the eating times, the habits,

493
00:16:23,955 --> 00:16:25,680
how people are booking,

494
00:16:25,980 --> 00:16:26,860
and things like that.

495
00:16:26,860 --> 00:16:29,200
And then we quickly
discovered,

496
00:16:29,660 --> 00:16:31,840
realized that if a restaurant

497
00:16:31,980 --> 00:16:36,785
becomes full, you
should refuse people.

498
00:16:36,925 --> 00:16:38,945
Because if you
accept the group,

499
00:16:39,405 --> 00:16:40,605
maybe there is another group

500
00:16:40,605 --> 00:16:41,890
that is even bigger that you

501
00:16:41,890 --> 00:16:43,330
will not be able
to accommodate

502
00:16:43,330 --> 00:16:44,690
because you you have accepted

503
00:16:44,690 --> 00:16:45,170
the first group,

504
00:16:45,170 --> 00:16:46,370
and so they are
taking the table

505
00:16:46,370 --> 00:16:47,830
that the other
group could take.

506
00:16:48,050 --> 00:16:49,730
So we also made a kind of

507
00:16:49,730 --> 00:16:51,430
recommendation
recommender system,

508
00:16:52,005 --> 00:16:54,165
but it's not an ML version of

509
00:16:54,165 --> 00:16:55,205
a recommender system.

510
00:16:55,205 --> 00:16:57,445
It's a combination
of ML and OR.

511
00:16:57,445 --> 00:16:58,965
Basically, we're combining ML

512
00:16:58,965 --> 00:17:00,985
and OR for everything we do.

513
00:17:01,530 --> 00:17:02,970
And so that's
recommender system

514
00:17:02,970 --> 00:17:04,330
was able to tell them, okay.

515
00:17:04,330 --> 00:17:05,930
Refuse that group
because probably

516
00:17:05,930 --> 00:17:07,710
you'll get another
one that is better.

517
00:17:08,090 --> 00:17:10,775
So I'm gonna cut it short to

518
00:17:10,775 --> 00:17:12,535
the results. So we got twenty

519
00:17:12,535 --> 00:17:13,655
percent more traffic.

520
00:17:13,655 --> 00:17:15,355
So twenty percent
more people.

521
00:17:15,575 --> 00:17:17,790
And we could do
that optimization

522
00:17:18,010 --> 00:17:19,610
in real time in
less than three

523
00:17:19,610 --> 00:17:21,150
milliseconds per booking.

524
00:17:22,810 --> 00:17:25,390
Here is another example where

525
00:17:25,610 --> 00:17:28,075
our customers, wanted to track

526
00:17:28,075 --> 00:17:29,295
in real time sausages.

527
00:17:29,675 --> 00:17:31,435
So the idea is to be able to

528
00:17:31,435 --> 00:17:33,935
track every
sausages individually

529
00:17:34,690 --> 00:17:36,850
and to be able to
say if a sausage

530
00:17:36,850 --> 00:17:39,570
is well cooked or
overcooked and

531
00:17:39,570 --> 00:17:40,370
also to,

532
00:17:40,690 --> 00:17:42,655
try to find out which ones are

533
00:17:42,655 --> 00:17:43,475
the best sellers.

534
00:17:43,855 --> 00:17:44,835
If you look carefully,

535
00:17:44,975 --> 00:17:46,835
so this is a computer
vision problem,

536
00:17:47,455 --> 00:17:49,315
it's very difficult
to differentiate

537
00:17:49,775 --> 00:17:52,970
sausages. So, they
had a system,

538
00:17:53,030 --> 00:17:54,790
and they really
had a hard time.

539
00:17:54,790 --> 00:17:56,150
They had a deep
learning system,

540
00:17:56,150 --> 00:17:57,770
and they really
had a hard time

541
00:17:57,910 --> 00:17:58,890
to train it.

542
00:17:59,350 --> 00:18:02,785
It really was very,
very demanding.

543
00:18:03,245 --> 00:18:05,325
Now I'm not gonna
give you the exact

544
00:18:05,325 --> 00:18:06,445
results, but let's
say that they

545
00:18:06,445 --> 00:18:07,905
came with that DL system,

546
00:18:08,230 --> 00:18:09,990
and it didn't work that well,

547
00:18:09,990 --> 00:18:12,070
and it asked for
a lot of training

548
00:18:12,070 --> 00:18:14,410
resources. And we basically

549
00:18:15,325 --> 00:18:17,025
added some OR stuff,

550
00:18:17,405 --> 00:18:19,745
and we could manage to reduce

551
00:18:19,965 --> 00:18:22,625
significantly
the training system,

552
00:18:22,765 --> 00:18:23,565
the training time,

553
00:18:23,565 --> 00:18:25,470
the training
resources, again,

554
00:18:25,470 --> 00:18:27,650
by combining ML and OR.

555
00:18:27,790 --> 00:18:29,890
The idea is that most
of the sausages,

556
00:18:30,030 --> 00:18:31,150
they're still I mean,

557
00:18:31,150 --> 00:18:33,390
they are just laying
on the grill.

558
00:18:33,390 --> 00:18:34,190
They don't move.

559
00:18:34,190 --> 00:18:36,515
So we took that as
an hypothesis.

560
00:18:36,975 --> 00:18:38,915
And with OR, we could
do some matching,

561
00:18:39,535 --> 00:18:41,215
and, this is how we get,

562
00:18:41,455 --> 00:18:42,755
way better results.

563
00:18:44,740 --> 00:18:45,940
So I'm gonna skip this,

564
00:18:45,940 --> 00:18:47,700
and I'm gonna talk
about the fourth

565
00:18:47,700 --> 00:18:51,160
type of hybridization
of ML and OR.

566
00:18:51,645 --> 00:18:53,405
This is the most
interesting one.

567
00:18:53,405 --> 00:18:54,605
This is where you
have the graph

568
00:18:54,605 --> 00:18:57,565
neural networks and way other

569
00:18:57,565 --> 00:19:00,065
combinations of ML and OR.

570
00:19:01,840 --> 00:19:03,040
This is current
academic research

571
00:19:03,040 --> 00:19:04,320
we are doing with
professor Jean

572
00:19:04,320 --> 00:19:06,180
Drau here in Montreal
at Polytechnic.

573
00:19:06,960 --> 00:19:08,660
We claim that this
combination,

574
00:19:09,715 --> 00:19:10,835
graph neural networks,

575
00:19:10,835 --> 00:19:13,075
and the other algorithms is

576
00:19:13,075 --> 00:19:14,775
the future of AI.

577
00:19:16,330 --> 00:19:18,810
We can do things that are not

578
00:19:18,810 --> 00:19:21,050
possible with ML or OR alone.

579
00:19:21,050 --> 00:19:22,250
It's really the combination of

580
00:19:22,250 --> 00:19:25,625
both that allows us
to do crazy things.

581
00:19:25,685 --> 00:19:27,285
I'm gonna talk
about two projects

582
00:19:27,285 --> 00:19:28,805
that we are trying to do.

583
00:19:28,805 --> 00:19:30,405
The first one is
about the injection

584
00:19:30,405 --> 00:19:32,005
of emotions into AI.

585
00:19:32,005 --> 00:19:33,950
This is something a lot of ML

586
00:19:33,950 --> 00:19:36,610
teams all over the world
are working on.

587
00:19:37,390 --> 00:19:39,390
And then another one is about

588
00:19:39,390 --> 00:19:40,130
real intelligence.

589
00:19:41,535 --> 00:19:43,615
We think that we can manage to

590
00:19:43,615 --> 00:19:44,815
get some real intelligence.

591
00:19:44,815 --> 00:19:46,255
I'm not talking about AGI.

592
00:19:46,255 --> 00:19:48,195
I'm talking about a definition

593
00:19:48,255 --> 00:19:49,555
of machine intelligence,

594
00:19:49,615 --> 00:19:52,040
and we think that by combining

595
00:19:52,040 --> 00:19:54,460
ML and OR, we could
get there now.

596
00:19:55,080 --> 00:19:58,115
So emotions.

597
00:19:59,215 --> 00:20:01,695
We think that only using ML is

598
00:20:01,695 --> 00:20:03,475
not a good idea. Why?

599
00:20:04,015 --> 00:20:05,155
There are lots of reasons.

600
00:20:05,990 --> 00:20:08,150
The first one is that you need

601
00:20:08,150 --> 00:20:10,390
a lot of data,
but really a lot.

602
00:20:10,390 --> 00:20:12,570
I mean, emotions are
really contextual.

603
00:20:13,670 --> 00:20:15,905
If you take one individual and

604
00:20:15,905 --> 00:20:18,145
you look at how he's changing

605
00:20:18,145 --> 00:20:19,685
his emotions during the day,

606
00:20:20,145 --> 00:20:21,445
at seven in the morning,

607
00:20:21,585 --> 00:20:23,480
at ten in the night,

608
00:20:23,620 --> 00:20:25,400
he will not behave
the same way.

609
00:20:25,540 --> 00:20:27,160
If he's surrounded
by his friends,

610
00:20:27,300 --> 00:20:28,580
his family, his boss,

611
00:20:28,580 --> 00:20:30,015
he will not react the same.

612
00:20:30,175 --> 00:20:31,695
So you need that kind of data

613
00:20:31,695 --> 00:20:33,075
if you want to use ML.

614
00:20:33,695 --> 00:20:35,715
And then, of course,
well, of course,

615
00:20:35,855 --> 00:20:37,135
not of course,
but you see that

616
00:20:37,135 --> 00:20:39,475
the data is biased and
we that's normal.

617
00:20:40,440 --> 00:20:43,000
It it's almost impossible not

618
00:20:43,000 --> 00:20:44,140
to have biased data.

619
00:20:45,720 --> 00:20:47,080
And then we're
talking about one

620
00:20:47,080 --> 00:20:49,215
individual with one emotion.

621
00:20:49,215 --> 00:20:50,255
Of course, you want the system

622
00:20:50,255 --> 00:20:52,035
that is able to
change its emotion,

623
00:20:52,335 --> 00:20:53,935
which means that the ML way is

624
00:20:53,935 --> 00:20:56,480
probably to study historical

625
00:20:56,540 --> 00:20:58,460
data where you have
changes of emotions.

626
00:20:58,460 --> 00:20:59,500
You you need that data.

627
00:20:59,500 --> 00:21:01,840
It's even bigger.
It's a bigger set.

628
00:21:02,380 --> 00:21:04,400
But the real deal breaker here

629
00:21:04,545 --> 00:21:06,705
is that there is no way or not

630
00:21:06,785 --> 00:21:09,905
no easy way to control
your chatbot,

631
00:21:09,905 --> 00:21:10,645
let's say.

632
00:21:11,425 --> 00:21:14,280
If you see what is happening

633
00:21:14,340 --> 00:21:15,940
with the big companies trying

634
00:21:15,940 --> 00:21:19,380
to put an emotional
chatbot out there,

635
00:21:19,380 --> 00:21:19,940
most of the time,

636
00:21:19,940 --> 00:21:21,640
they have to unplug it quite

637
00:21:21,815 --> 00:21:24,635
soon because it's going
totally per sec.

638
00:21:24,775 --> 00:21:26,295
And it's very, very difficult

639
00:21:26,295 --> 00:21:29,115
to control a chatbot
with ML only.

640
00:21:29,630 --> 00:21:31,070
If you combine ML and OR,

641
00:21:31,070 --> 00:21:32,930
you can control
this way better.

642
00:21:33,470 --> 00:21:34,750
So that's one of
the reason why

643
00:21:34,750 --> 00:21:37,915
we think that ML
only is not a good

644
00:21:37,915 --> 00:21:42,095
idea. And then there is this

645
00:21:42,475 --> 00:21:44,450
intelligent, machine
intelligence.

646
00:21:45,310 --> 00:21:46,530
So it's not AGI.

647
00:21:46,910 --> 00:21:48,930
It might lead to AGI, maybe.

648
00:21:49,790 --> 00:21:51,390
This is the definition we have

649
00:21:51,390 --> 00:21:53,415
of a machine intelligence.

650
00:21:53,715 --> 00:21:55,235
So we think that
we are able to

651
00:21:55,235 --> 00:21:56,995
construct the system that can

652
00:21:56,995 --> 00:21:59,655
autonomously, so on
its own, change,

653
00:21:59,715 --> 00:22:02,020
optimize its internal
understanding,

654
00:22:02,160 --> 00:22:04,020
the representation of its

655
00:22:04,320 --> 00:22:06,580
surroundings of
the outside world,

656
00:22:06,880 --> 00:22:09,125
but it can do so in terms of

657
00:22:09,125 --> 00:22:11,145
concepts and subconcepts.

658
00:22:11,445 --> 00:22:12,405
This is something that doesn't

659
00:22:12,405 --> 00:22:13,305
exist in ML.

660
00:22:14,485 --> 00:22:17,040
And we think that not only you

661
00:22:17,040 --> 00:22:18,660
can use concepts
and subconcepts,

662
00:22:18,720 --> 00:22:19,920
but you can do
this very quickly

663
00:22:19,920 --> 00:22:21,360
in the sense that that system

664
00:22:21,360 --> 00:22:23,120
can learn very quickly and can

665
00:22:23,120 --> 00:22:24,500
unlearn very quickly.

666
00:22:25,215 --> 00:22:27,695
Basically, this
is what we would

667
00:22:27,695 --> 00:22:29,315
call a kind of intelligence.

668
00:22:29,615 --> 00:22:31,455
It has nothing to
do with the brain

669
00:22:31,455 --> 00:22:32,435
or an animal.

670
00:22:32,800 --> 00:22:34,000
It's machine intelligence,

671
00:22:34,000 --> 00:22:35,680
and it's only one type of

672
00:22:35,680 --> 00:22:36,820
intelligence for
the machines.

673
00:22:37,440 --> 00:22:39,620
We're working on
the following problem.

674
00:22:41,445 --> 00:22:44,565
And you'll see that only using

675
00:22:44,565 --> 00:22:46,005
reinforcement
learning to solve

676
00:22:46,005 --> 00:22:47,445
that problem is
probably not a good

677
00:22:47,445 --> 00:22:49,040
idea. So we have a maze,

678
00:22:49,200 --> 00:22:50,880
and it's a simple
maze where you

679
00:22:50,880 --> 00:22:52,560
have holes. If your agent is

680
00:22:52,560 --> 00:22:54,240
falling in the hole,
you're dead.

681
00:22:54,240 --> 00:22:55,380
And then you have
strawberries.

682
00:22:55,760 --> 00:22:57,440
If your agent is eating
the strawberries

683
00:22:57,440 --> 00:22:58,875
, you get some points,
some rewards.

684
00:23:00,075 --> 00:23:01,275
The goal is, of course,

685
00:23:01,275 --> 00:23:02,815
to get out of the maze,

686
00:23:02,875 --> 00:23:04,555
maybe under
a certain amount of

687
00:23:04,555 --> 00:23:06,395
time and to
maximize the number

688
00:23:06,395 --> 00:23:07,780
of strawberries
you're gonna eat.

689
00:23:08,980 --> 00:23:10,200
That's fine.
With reinforcement

690
00:23:10,340 --> 00:23:12,200
learning, you can do
that very easily.

691
00:23:12,740 --> 00:23:13,560
It works perfectly.

692
00:23:13,700 --> 00:23:15,915
Except that you didn't
learn anything.

693
00:23:15,915 --> 00:23:17,035
In the sense that if you take

694
00:23:17,035 --> 00:23:18,395
a hole and you just,

695
00:23:18,635 --> 00:23:20,655
move it one centimeter away,

696
00:23:20,875 --> 00:23:23,810
your agent is gonna
fall in the hole.

697
00:23:23,810 --> 00:23:25,570
So it didn't get a notion,

698
00:23:25,570 --> 00:23:26,790
a concept of hole.

699
00:23:27,330 --> 00:23:30,345
We think that not only we will

700
00:23:30,345 --> 00:23:32,905
be able to displace
the holes,

701
00:23:32,905 --> 00:23:34,605
but we think that
dynamically,

702
00:23:34,825 --> 00:23:37,040
we will exchange the roles of

703
00:23:37,040 --> 00:23:38,640
the strawberries
and the holes,

704
00:23:38,640 --> 00:23:39,780
which means that suddenly,

705
00:23:40,160 --> 00:23:41,860
if you are eating
a strawberry,

706
00:23:42,000 --> 00:23:44,480
you die. And if you
fall into a hole,

707
00:23:44,480 --> 00:23:46,095
actually, you get
some rewards.

708
00:23:46,495 --> 00:23:47,795
And we think that
it's possible

709
00:23:47,855 --> 00:23:49,295
during the game to change this

710
00:23:49,295 --> 00:23:50,415
several times. Of course,

711
00:23:50,415 --> 00:23:51,935
you cannot change all
the time because,

712
00:23:51,935 --> 00:23:53,295
otherwise, your agent is going

713
00:23:53,295 --> 00:23:54,995
crazy and it's
impossible to play.

714
00:23:55,240 --> 00:23:57,000
But we think that
you can change

715
00:23:57,000 --> 00:23:58,840
sometimes, and we
think that our

716
00:23:58,840 --> 00:24:01,500
agent will be able
to adapt to this.

717
00:24:01,880 --> 00:24:04,355
So this is what we think is

718
00:24:04,355 --> 00:24:05,555
possible with the combination

719
00:24:05,555 --> 00:24:07,255
of ML and OR.

720
00:24:07,795 --> 00:24:09,075
You get way better results.

721
00:24:09,075 --> 00:24:10,435
You can do things
that are simply

722
00:24:10,435 --> 00:24:14,150
impossible with ML
only or OR only.

723
00:24:14,610 --> 00:24:15,890
Thank you very much
for listening,

724
00:24:15,890 --> 00:24:17,990
and now I welcome
your questions.

